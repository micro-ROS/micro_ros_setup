variables:
  DOCKER_DRIVER: overlay2
  ROS_DISTRO: crystal
  base_image: ${CI_REGISTRY}/micro-ros/ci/micro-ros-build/uros-crystal-dev
  agent_image: ${CI_REGISTRY}/micro-ros/ci/micro-ros-build/uros-crystal-agent-dev
  firmware_image: ${CI_REGISTRY}/micro-ros/ci/micro-ros-build/uros-crystal-firmware-dev

image: ros:${ROS_DISTRO}-ros-base

stages:
  - docker_base
  - docker
  - pkgonly
  - single
  - combined

before_script:
  - export PATH=/usr/lib/ccache:$PATH

colcon:
  image: ${base_image}
  stage: pkgonly
  script:
    - which gcc
    - rosdep install -y --from-paths . -i .
    - colcon build --merge-install
    - ccache -s
    - test -f install/bin/kconfig && test -f install/lib/micro_ros_setup/build_firmware.sh
  only:
    - master
    - /.*build.*/
    - /.*ccache.*/

agent_ws:
  image: ${agent_image}
  stage: single
  script:
    - rosdep update
    - colcon build --merge-install --packages-select micro_ros_setup
    - . install/local_setup.sh
    - ros2 run micro_ros_setup create_agent_ws.sh src
    - source /opt/ros/${ROS_DISTRO}/setup.bash && colcon build --merge-install 
    - ccache -s
    - test -f install/lib/micro_ros_agent/micro_ros_agent
  only:
    - master
    - /.*agent.*/
    - /.*ccache.*/

firmware:
  image: ${firmware_image}
  stage: single
  script:
    - colcon build --packages-select micro_ros_setup nuttx_kconfig_vendor
    - test -f install/bin/kconfig && test -f install/lib/micro_ros_setup/build_firmware.sh
    - . install/local_setup.sh
    - ros2 run micro_ros_setup create_firmware_ws.sh
    - cd firmware/NuttX
    - tools/configure.sh configs/olimex-stm32-e407/drive_base
    - cd ../..
    - ros2 run micro_ros_setup build_firmware.sh
    - test -f firmware/NuttX/nuttx
  only:
    - master
    - /.*firmware.*/
    - /.*ccache.*/

all:
  image: ${firmware_image}
  stage: combined
  script:
    - colcon build --merge-install
    - . install/local_setup.sh
    - ros2 run micro_ros_setup create_agent_ws.sh src
    - . /opt/ros/${ROS_DISTRO}/setup.bash && colcon build --merge-install
    - test -f install/lib/micro_ros_agent/micro_ros_agent
    - . install/local_setup.sh
    - ros2 run micro_ros_setup create_firmware_ws.sh
    - cd firmware/NuttX
    - tools/configure.sh configs/olimex-stm32-e407/drive_base
    - cd ../..
    - ros2 run micro_ros_setup build_firmware.sh
    - ccache -s
    - test -f firmware/NuttX/nuttx
  only:
    - master
    - /.*build-all.*/
    - /.*ccache.*/

ci_base_image:
  stage: docker_base
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${CI_REGISTRY}
    - docker build -t ${base_image} -f micro_ros_setup/docker/Dockerfile.ci-base .
    - docker push ${base_image}
  only:
    - scheduled
    - /.*ci-base-image.*/

agent_base_image:
  stage: docker
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${CI_REGISTRY}
    - docker build -t ${agent_image} --build-arg CI_REGISTRY=${CI_REGISTRY} -f micro_ros_setup/docker/Dockerfile.agent .
    - docker push ${agent_image}
  only:
    - scheduled
    - /.*ci-base-image.*/

firmware_base_image:
  stage: docker
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${CI_REGISTRY}
    - docker build -t ${firmware_image} --build-arg CI_REGISTRY=${CI_REGISTRY} -f micro_ros_setup/docker/Dockerfile.firmware .
    - docker push ${firmware_image}
  only:
    - scheduled
    - /.*ci-base-image.*/
