name: Nightly

on: 
  workflow_dispatch:
    inputs:
      name:
        description: "Manual trigger"
  schedule:
    - cron:  '0 4 * * *'
    
jobs:

  micro_ros_build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: foxy
            branch: foxy
          - distro: rolling
            branch: main
    container: ros:${{ matrix.distro }}

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro_ros_setup
          ref: ${{ matrix.branch }}

      - name: Dependencies
        run: |
          apt update
          apt install -y python3-colcon-metadata python3-pip
          rosdep update
          rosdep install -y --from-paths src --ignore-src -y

      - name: Build
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          colcon build

      - name: Install micro-ROS build system
        run: |
            (test -f install/micro_ros_setup/lib/micro_ros_setup/build_firmware.sh) && true || false

      - uses: actions/upload-artifact@v1
        with:
          name: micro_ros_build_${{ matrix.branch }}
          path: install

  micro_ros_client:
    runs-on: ubuntu-latest
    container: ros:${{ matrix.distro }}
    needs: micro_ros_build

    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: foxy
            branch: foxy
            rtos: host
            platform: null
            configuration: null
            transport_arguments: null
            binary: 'install/micro_ros_demos_rclc/lib/micro_ros_demos_rclc/int32_publisher/int32_publisher'

          - distro: foxy
            branch: foxy
            rtos: generate_lib
            platform: null
            configuration: null
            transport_arguments: null
            build_arguments: $(pwd)/src/micro_ros_setup/config/generate_lib/generic/demo_toolchain.cmake
            binary: 'firmware/build/libmicroros.a'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: crazyflie21
            configuration: crazyflie_position_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_crazyflie21_extensions/cf2.bin'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: olimex-stm32-e407
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_olimex_e407_extensions/build/micro-ROS.elf'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: nucleo_f446re
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f446re_extensions/build/micro-ROS.elf'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: nucleo_f446ze
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f446ze_extensions/build/micro-ROS.elf'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: nucleo_f746zg
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f746zg_extensions/build/micro-ROS.elf'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: nucleo_f767zi
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f767zi_extensions/build/micro-ROS.elf'

          - distro: foxy
            branch: foxy
            rtos: freertos
            platform: esp32
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_esp32_extensions/build/int32_publisher.elf'

          - distro: foxy
            branch: foxy
            rtos: zephyr
            platform: olimex-stm32-e407
            configuration: int32_publisher
            transport_arguments: -t serial-usb
            binary: 'firmware/build/zephyr/zephyr.bin'

          - distro: foxy
            branch: foxy
            rtos: zephyr
            platform: discovery_l475_iot1
            configuration: int32_publisher
            transport_arguments: -t serial-usb
            binary: 'firmware/build/zephyr/zephyr.bin'

          - distro: foxy
            branch: foxy
            rtos: zephyr
            platform: nucleo_h743zi
            configuration: int32_publisher
            transport_arguments: -t serial -d 3
            binary: 'firmware/build/zephyr/zephyr.bin'
          
          - distro: foxy
            branch: foxy
            rtos: zephyr
            platform: nucleo_f746zg
            configuration: int32_publisher
            transport_arguments: -t serial -d 3
            binary: 'firmware/build/zephyr/zephyr.bin'

          - distro: foxy
            branch: foxy
            rtos: zephyr
            platform: host
            configuration: ping_pong
            transport_arguments: -t udp -i 192.168.1.1 -p 8080
            binary: 'firmware/build/zephyr/zephyr.exe'

          - distro: foxy
            branch: foxy
            rtos: nuttx
            platform: olimex-stm32-e407
            configuration: drive_base
            transport_arguments: 
            binary: 'firmware/NuttX/nuttx.bin'

          - distro: foxy
            branch: foxy
            rtos: raspbian
            platform: buster_v7
            configuration: agent_lite
            binary: 'firmware/bin/micro_ros_agent_lite'

          - distro: foxy
            branch: foxy
            rtos: raspbian
            platform: buster_v7
            configuration: weather_publisher
            binary: 'firmware/bin/weather_publisher'

          - distro: rolling
            branch: main
            rtos: host
            platform: null
            configuration: null
            transport_arguments: null
            binary: 'install/micro_ros_demos_rclc/lib/micro_ros_demos_rclc/int32_publisher/int32_publisher'

          - distro: rolling
            branch: main
            rtos: generate_lib
            platform: null
            configuration: null
            transport_arguments: null
            build_arguments: $(pwd)/src/micro_ros_setup/config/generate_lib/generic/demo_toolchain.cmake
            binary: 'firmware/build/libmicroros.a'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: crazyflie21
            configuration: crazyflie_position_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_crazyflie21_extensions/cf2.bin'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: olimex-stm32-e407
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_olimex_e407_extensions/build/micro-ROS.elf'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: nucleo_f446re
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f446re_extensions/build/micro-ROS.elf'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: nucleo_f446ze
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f446ze_extensions/build/micro-ROS.elf'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: nucleo_f746zg
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f746zg_extensions/build/micro-ROS.elf'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: nucleo_f767zi
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_nucleo_f767zi_extensions/build/micro-ROS.elf'

          - distro: rolling
            branch: main
            rtos: freertos
            platform: esp32
            configuration: int32_publisher
            transport_arguments: -t serial -d 1
            binary: 'firmware/freertos_apps/microros_esp32_extensions/build/int32_publisher.elf'

          - distro: rolling
            branch: main
            rtos: zephyr
            platform: olimex-stm32-e407
            configuration: int32_publisher
            transport_arguments: -t serial-usb
            binary: 'firmware/build/zephyr/zephyr.bin'

          - distro: rolling
            branch: main
            rtos: zephyr
            platform: discovery_l475_iot1
            configuration: int32_publisher
            transport_arguments: -t serial-usb
            binary: 'firmware/build/zephyr/zephyr.bin'

          - distro: rolling
            branch: main
            rtos: zephyr
            platform: nucleo_h743zi
            configuration: int32_publisher
            transport_arguments: -t serial -d 3
            binary: 'firmware/build/zephyr/zephyr.bin'
          
          - distro: rolling
            branch: main
            rtos: zephyr
            platform: nucleo_f746zg
            configuration: int32_publisher
            transport_arguments: -t serial -d 3
            binary: 'firmware/build/zephyr/zephyr.bin'

          - distro: rolling
            branch: main
            rtos: zephyr
            platform: host
            configuration: ping_pong
            transport_arguments: -t udp -i 192.168.1.1 -p 8080
            binary: 'firmware/build/zephyr/zephyr.exe'

          - distro: rolling
            branch: main
            rtos: nuttx
            platform: olimex-stm32-e407
            configuration: drive_base
            transport_arguments: 
            binary: 'firmware/NuttX/nuttx.bin'

          - distro: rolling
            branch: main
            rtos: raspbian
            platform: buster_v7
            configuration: agent_lite
            binary: 'firmware/bin/micro_ros_agent_lite'

          - distro: rolling
            branch: main
            rtos: raspbian
            platform: buster_v7
            configuration: weather_publisher
            binary: 'firmware/bin/weather_publisher'

          - distro: rolling
            branch: main
            rtos: mbed
            platform: disco_l475vg_iot01a
            binary: 'firmware/micro_ros_mbed/cmake_build/mbed-microros.bin'
    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro_ros_setup
          ref: ${{ matrix.branch }}

      - name: Dependencies
        run: |
          apt update
          # Install last version of CMake
          apt install -y apt-transport-https ca-certificates gnupg software-properties-common wget
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
          apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
          apt-get update
          apt install -y python3-colcon-metadata python3-pip cmake
          rosdep update
          rosdep install -y --from-paths src --ignore-src -y

      - uses: actions/download-artifact@v1
        with:
          name: micro_ros_build_${{ matrix.branch }}
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install

      - name: Configure and build micro-ROS
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          . install/local_setup.sh
          ros2 run micro_ros_setup create_firmware_ws.sh ${{ matrix.rtos }} ${{ matrix.platform }}
          ros2 run micro_ros_setup configure_firmware.sh ${{ matrix.configuration }} ${{ matrix.transport_arguments }} 
          ros2 run micro_ros_setup build_firmware.sh ${{ matrix.build_arguments }} 

      - name: Check binaries
        run: |
          (test -f ${{ matrix.binary }}) && true || false

  micro_ros_agent:
    runs-on: ubuntu-latest    
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: foxy
            branch: foxy
          - distro: rolling
            branch: main
    
    needs: micro_ros_build
    container: ros:${{ matrix.distro }}

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro_ros_setup
          ref: ${{ matrix.branch }}

      - name: dependencies
        run: |
          apt update
          apt install -y python3-colcon-metadata python3-pip
          rosdep update
          rosdep install -y --from-paths src --ignore-src -y

      - uses: actions/download-artifact@v1
        with:
          name: micro_ros_build_${{ matrix.branch }}
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install

      - name: build
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          . install/local_setup.sh
          ros2 run micro_ros_setup create_agent_ws.sh
          ros2 run micro_ros_setup build_agent.sh

      - name: installation
        run: |
            (test -f install/micro_ros_agent/lib/micro_ros_agent/micro_ros_agent) && true || false