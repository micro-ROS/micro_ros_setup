name: CI

on:
  push:
    branches:
    - feature/gbs_ci

jobs:

  micro_ros_build:
    runs-on: ubuntu-latest
    #container: microros/base:${{github.base_ref}}
    container: microros/base:dashing

    steps:
    - uses: actions/checkout@v2
      with:
        path: src/micro-ros-build

    - name: rosdep
      run: rosdep update

    - name: Build micro_ros_setup
      run: |
        . /opt/ros/$ROS_DISTRO/setup.sh
        rosdep install -y --from-paths . -i .
        colcon build --merge-install

    - name: Test micro_ros_setup build
      uses: BorjaOuterelo/test-file-system-action@v0.0.2
      with:
        path: 'install'
        files: 'lib/micro_ros_setup/build_firmware.sh'

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: micro_ros_build
        path: install

  agent:
    runs-on: ubuntu-latest
    #container: microros/base:${{github.base_ref}}
    container: microros/base:dashing
    needs: micro_ros_build

    steps:
    - uses: actions/checkout@v2
      with:
        path: src/micro-ros-build

    - name: rosdep
      run: rosdep update

    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: micro_ros_build
        path: install

    # Workaround https://github.com/actions/upload-artifact/issues/38
    - run: |
        chmod +x -R install/lib/micro_ros_setup        

    - name: Create ws and build
      run: |
        . /opt/ros/$ROS_DISTRO/setup.sh
        . install/local_setup.sh
        ros2 run micro_ros_setup create_agent_ws.sh src
        colcon build --merge-install

    - name: Test micro_ros_agent build
      uses: BorjaOuterelo/test-file-system-action@v0.0.2
      with:
        files: 'install/lib/micro_ros_agent/micro_ros_agent'

  client_host:
    runs-on: ubuntu-latest
    #container: microros/base:${{github.base_ref}}
    container: microros/base:dashing
    needs: micro_ros_build

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro-ros-build

      - name: rosdep
        run: rosdep update

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: micro_ros_build
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install/lib/micro_ros_setup
          chmod +x install/config/host/generic/*.sh
      #Skip rclc packages due to build fail. Once the issues with rclc are solved will be back to CI.
      - name: Create ws and build
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          . install/local_setup.sh
          apt-get update
          ros2 run micro_ros_setup create_firmware_ws.sh host
          colcon build --merge-install --metas src - --packages-skip rclc micro_ros_demos_rclc rclc_examples
          
      - name: Test build file
        run: |
          (test -f install/lib/micro_ros_demos_rcl/int32_publisher/int32_publisher  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/int32_subscriber/int32_subscriber  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/int32_publisher_subscriber/int32_publisher_subscriber  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/int32_multinode/int32_multinode  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/guard_condition/guard_condition  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/fibonacci_action_server/fibonacci_action_server  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/fibonacci_action_client/fibonacci_action_client  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/configured_subscriber/configured_subscriber  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/configured_publisher/configured_publisher  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/addtwoints_server/addtwoints_server  && true) || false
          (test -f install/lib/micro_ros_demos_rcl/addtwoints_client/addtwoints_client  && true) || false

  #Temporary solution due to NuttX is no fully implemented on the generic build system
  client_nuttx_firmware:
    runs-on: ubuntu-latest
    #container: microros/ci:${{github.base_ref}}
    container: microros/ci:dashing
    needs: micro_ros_build

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro-ros-build

      - name: Dependencies
        run: apt-get install -y ed

      - name: Rosdep
        run: rosdep update

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: micro_ros_build
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install/lib/micro_ros_setup
          chmod +x install/config/nuttx/generic/*.sh

      - name: Create ws and build
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          . install/local_setup.sh
          apt-get update
          ros2 run micro_ros_setup create_firmware_ws.sh nuttx olimex-stm32-e407
          cd firmware/NuttX
          git checkout fix/reorganize_defconfig
          cd ../..
          ros2 run micro_ros_setup configure_firmware.sh uros
          ros2 run micro_ros_setup build_firmware.sh

      - name: Test build files
        run: |
          (test -f firmware/NuttX/nuttx.bin  && true) || false

  
  #Build test for freeRTOS and Zephyr
  client_firmware:
    runs-on: ubuntu-latest
    #container: microros/ci:${{github.base_ref}}
    container: microros/ci:dashing
    needs: micro_ros_build

    strategy:
      fail-fast: false
      matrix:
        rtos: [freertos,zephyr]
        platform: [crazyflie21, generic, olimex-stm32-e407]
        exclude:
          - rtos: freertos
            platform: generic
          - rtos: zephyr
            platform: crazyflie21
          - rtos: zephyr
            platform: generic

        include:
          - rtos: freertos
            platform: crazyflie21
            configuration: crazyflie_position_publisher
            transport_arguments: -t serial -d /dev/ttyS0
            files: 'firmware/crazyflie_microros_extensions/cf2.elf'
          - rtos: freertos
            platform: olimex-stm32-e407
            configuration: olimex_ping_pong
            transport_arguments: -t serial -d /dev/ttyS0
            files: 'firmware/olimex_e407_extensions/build/micro-ROS.elf,
                    firmware/olimex_e407_extensions/build/micro-ROS.bin'
          - rtos: zephyr
            platform: olimex-stm32-e407
            configuration: sample_publisher
            transport_arguments: -t serial-usb -d /dev/ttyS0

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro-ros-build

      - name: Dependencies
        run: apt-get install -y ed

      - name: Rosdep
        run: rosdep update

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: micro_ros_build
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install/lib/micro_ros_setup
          chmod +x install/config/${{ matrix.rtos }}/${{ matrix.platform }}/*.sh
      - name: Test micro_ros_agent build
        uses: BorjaOuterelo/test-file-system-action@v0.0.1
        with:
          path: 'install'
          files: 'lib/micro_ros_setup/build_firmware.sh'

      - name: Create ws and build
        run: |
          . /opt/ros/dashing/setup.sh
          . install/local_setup.sh
          apt-get update
          ros2 run micro_ros_setup create_firmware_ws.sh ${{ matrix.rtos }} ${{ matrix.platform }}
          ros2 run micro_ros_setup configure_firmware.sh ${{ matrix.configuration }} ${{ matrix.transport_arguments }} 
          ros2 run micro_ros_setup build_firmware.sh
