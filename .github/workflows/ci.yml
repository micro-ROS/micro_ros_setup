name: CI

on:
  pull_request:
    branches:
    - dashing
    - crystal

jobs:

  micro_ros_build:
    runs-on: ubuntu-latest
    container: microros/base:${{github.base_ref}}

    steps:
    - uses: actions/checkout@v2
      with:
        path: src/micro-ros-build

    - name: rosdep
      run: rosdep update

    - name: Build micro_ros_setup
      run: |
        . /opt/ros/$ROS_DISTRO/setup.sh
        rosdep install -y --from-paths . -i .
        colcon build --merge-install

    - name: Test micro_ros_setup build
      uses: BorjaOuterelo/test-file-system-action@v0.0.2
      with:
        path: 'install'
        files: 'lib/micro_ros_setup/build_firmware.sh'

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: micro_ros_build
        path: install

  agent:
    runs-on: ubuntu-latest
    container: microros/base:${{github.base_ref}}
    needs: micro_ros_build

    steps:
    - uses: actions/checkout@v2
      with:
        path: src/micro-ros-build

    - name: rosdep
      run: rosdep update

    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: micro_ros_build
        path: install

    # Workaround https://github.com/actions/upload-artifact/issues/38
    - run: |
        chmod +x -R install/lib/micro_ros_setup        

    - name: Create ws and build
      run: |
        . /opt/ros/$ROS_DISTRO/setup.sh
        . install/local_setup.sh
        ros2 run micro_ros_setup create_agent_ws.sh src
        colcon build --merge-install

    - name: Test micro_ros_agent build
      uses: BorjaOuterelo/test-file-system-action@v0.0.2
      with:
        files: 'install/lib/micro_ros_agent/micro_ros_agent'

  client_host:
    runs-on: ubuntu-latest
    container: microros/base:${{github.base_ref}}
    needs: micro_ros_build

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro-ros-build

      - name: rosdep
        run: rosdep update

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: micro_ros_build
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install/lib/micro_ros_setup
          chmod +x install/config/host/generic/*.sh

      - name: Create ws and build
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          . install/local_setup.sh
          ros2 run micro_ros_setup create_firmware_ws.sh host
          ros2 run micro_ros_setup build_firmware.sh --merge-install

      - name: Test micro_ros_demos_rcl
        uses: BorjaOuterelo/test-file-system-action@v0.0.2
        with:
          path: 'install/lib/micro_ros_demos_rcl'
          files: 'addtwoints_client/addtwoints_client,
                  addtwoints_server/addtwoints_server,
                  configured_publisher/configured_publisher,
                  configured_subscriber/configured_subscriber,
                  fibonacci_action_client/fibonacci_action_client,
                  fibonacci_action_server/fibonacci_action_server,
                  guard_condition/guard_condition,
                  int32_multinode/int32_multinode,
                  int32_publisher/int32_publisher,
                  int32_publisher_subscriber/int32_publisher_subscriber,
                  int32_subscriber/int32_subscriber'

      - name: Test micro_ros_demos_rclc
        uses: BorjaOuterelo/test-file-system-action@v0.0.2
        with:
          path: 'install/lib/micro_ros_demos_rclc'
          files: 'complex_msg_publisher/complex_msg_publisher,
                  complex_msg_subscriber/complex_msg_subscriber,
                  int32_publisher/int32_publisher,
                  int32_subscriber/int32_subscriber,
                  rad0_actuator/rad0_actuator,
                  rad0_altitude_sensor/rad0_altitude_sensor,
                  rad0_display/rad0_display,
                  string_publisher/string_publisher,
                  string_subscriber/string_subscriber'

      - name: Test micro_ros_demos_rclcpp
        uses: BorjaOuterelo/test-file-system-action@v0.0.2
        with:
          path: 'install/lib/micro_ros_demos_rclcpp'
          files: 'complex_msg_publisher/complex_msg_publisher,
                  complex_msg_subscriber/complex_msg_subscriber,
                  int32_publisher/int32_publisher,
                  int32_subscriber/int32_subscriber,
                  rad0_control/rad0_control,
                  string_publisher/string_publisher,
                  string_subscriber/string_subscriber'

  client_firmware:
    runs-on: ubuntu-latest
    container: microros/ci:${{github.base_ref}}
    needs: micro_ros_build

    strategy:
      fail-fast: false
      matrix:
        rtos: [nuttx, freertos]
        platform: [crazyflie21, generic]
        exclude:
          - rtos: freertos
            platform: generic
          - rtos: nuttx
            platform: crazyflie21
        include:
          - rtos: nuttx
            platform: generic
            configuration: olimex-stm32-e407/uros
            files: 'firmware/NuttX/nuttx'
          - rtos: freertos
            files: 'firmware/crazyflie_microros_extensions/cf2.elf'

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/micro-ros-build

      - name: Dependencies
        run: apt-get install -y ed

      - name: Rosdep
        run: rosdep update

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: micro_ros_build
          path: install

      # Workaround https://github.com/actions/upload-artifact/issues/38
      - run: |
          chmod +x -R install/lib/micro_ros_setup
          chmod +x install/config/${{ matrix.rtos }}/${{ matrix.platform }}/*.sh

      - name: Test micro_ros_agent build
        uses: BorjaOuterelo/test-file-system-action@v0.0.2
        with:
          path: 'install'
          files: 'lib/micro_ros_setup/build_firmware.sh'

      - name: Create ws and build
        run: |
          . /opt/ros/$ROS_DISTRO/setup.sh
          . install/local_setup.sh
          ros2 run micro_ros_setup create_firmware_ws.sh ${{ matrix.rtos }} ${{ matrix.platform }}
          ros2 run micro_ros_setup configure_firmware.sh ${{ matrix.configuration }}
          ros2 run micro_ros_setup build_firmware.sh

      - name: Test firmware build
        if: matrix.files
        uses: BorjaOuterelo/test-file-system-action@v0.0.2
        with:
          files: ${{ matrix.files }}
